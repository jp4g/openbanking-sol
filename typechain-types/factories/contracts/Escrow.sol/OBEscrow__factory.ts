/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  OBEscrow,
  OBEscrowInterface,
} from "../../../contracts/Escrow.sol/OBEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_aavePoolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "aavePool",
    outputs: [
      {
        internalType: "contract IAavePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitment",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "escrowData",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountToWithdraw",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_userCommitment",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108de3803806108de83398101604081905261002f9161012d565b6001600160a01b03821661008a5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207061796d656e7420746f6b656e206164647265737300000060448201526064015b60405180910390fd5b6001600160a01b0381166100e05760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964204161766520506f6f6c2061646472657373000000000000006044820152606401610081565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055610160565b80516001600160a01b038116811461012857600080fd5b919050565b6000806040838503121561014057600080fd5b61014983610111565b915061015760208401610111565b90509250929050565b61076f8061016f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633013ce291461005c578063441a3e701461008c57806372236b82146100a1578063a03e4bc3146100dd578063e2bbb158146100f0575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a36600461066a565b610103565b005b6100c86100af36600461068c565b6002602052600090815260409020805460019091015482565b60408051928352602083019190915201610083565b60015461006f906001600160a01b031681565b61009f6100fe36600461066a565b61031f565b33600090815260026020526040902080548311156101685760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e742062616c616e636520696e20416176650000000060448201526064015b60405180910390fd5b60015460008054604051631a4ca37b60e21b81526001600160a01b03918216600482015260248101879052306044820152919216906369328dec906064016020604051808303816000875af11580156101c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e991906106bc565b9050838110156102345760405162461bcd60e51b815260206004820152601660248201527510585d99481dda5d1a191c985dd85b0819985a5b195960521b604482015260640161015f565b60005460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a991906106d5565b6103005760405162461bcd60e51b815260206004820152602260248201527f546f6b656e207472616e7366657220746f20726563697069656e74206661696c604482015261195960f21b606482015260840161015f565b83826000016000828254610314919061070d565b909155505050505050565b6000821161036f5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161015f565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc91906106bc565b6000546040516323b872dd60e01b8152336004820152306024820152604481018690529192506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610434573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045891906106d5565b50600080546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c691906106bc565b6104d0919061070d565b90508381146105335760405162461bcd60e51b815260206004820152602960248201527f546f6b656e207472616e73666572206661696c6564206f72207061727469616c604482015268103a3930b739b332b960b91b606482015260840161015f565b60005460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015610588573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ac91906106d5565b506001546000805460405163617ba03760e01b81526001600160a01b0391821660048201526024810185905230604482015260648101929092529091169063617ba03790608401600060405180830381600087803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505033600090815260026020526040812060018101549093509003905061064a57600181018490555b8181600001600082825461065e9190610726565b90915550505050505050565b6000806040838503121561067d57600080fd5b50508035926020909101359150565b60006020828403121561069e57600080fd5b81356001600160a01b03811681146106b557600080fd5b9392505050565b6000602082840312156106ce57600080fd5b5051919050565b6000602082840312156106e757600080fd5b815180151581146106b557600080fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610720576107206106f7565b92915050565b80820180821115610720576107206106f756fea2646970667358221220adca1467111a1e081f6248b626f69f309cc6ca6c50a8e81c9212dad8a0a51b7f64736f6c63430008150033";

type OBEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OBEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OBEscrow__factory extends ContractFactory {
  constructor(...args: OBEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _paymentToken: AddressLike,
    _aavePoolAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _paymentToken,
      _aavePoolAddress,
      overrides || {}
    );
  }
  override deploy(
    _paymentToken: AddressLike,
    _aavePoolAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _paymentToken,
      _aavePoolAddress,
      overrides || {}
    ) as Promise<
      OBEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OBEscrow__factory {
    return super.connect(runner) as OBEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OBEscrowInterface {
    return new Interface(_abi) as OBEscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): OBEscrow {
    return new Contract(address, _abi, runner) as unknown as OBEscrow;
  }
}
